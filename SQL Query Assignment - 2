1.Find out the number of documentaries with deleted scenes.

mysql> select count(*) 
    -> from ((film inner join film_category on film.film_id=film_category.film_id) 
    -> inner join category on film_category.category_id =category.category_id)
    ->  where category.name='Documentary' and film.special_features='Deleted Scenes';
+----------+
| count(*) |
+----------+
|        7 |
+----------+
1 row in set (0.00 sec)


2.Find out the number of sci-fi movies rented by the store managed by Jon Stephens.

mysql> select count(*) as Count_of_sci_fi from film_category FC,store S,inventory I
       where FC.film_id=I.film_id And  I.store_id=S.store_id 
       And  S.manager_staff_id=2 And FC.category_id=14;
+-----------------+
| Count_of_sci_fi |
+-----------------+
|             163 |
+-----------------+
1 row in set (0.00 sec)


3.Find out the total sales from Animation movies.

mysql> select * from sales_by_film_category
    -> where category="Animation";
+-----------+-------------+
| category  | total_sales |
+-----------+-------------+
| Animation |     4656.30 |
+-----------+-------------+
1 row in set (0.08 sec)


4.Find out the top 3 rented category of movies  by “PATRICIA JOHNSON”.

mysql> select distinct(C.name) from  category C,film_category FC,inventory I,rental R,customer_list CL where C.category_id=FC.category_id And FC.film_id=I.film_id And I.inventory_id=R.inventory_id And R.customer_id=CL.ID And CL.name like '%PATRICIA JOHNSON%' limit 3;
+-----------+
| name      |
+-----------+
| Animation |
| Classics  |
| Sports    |
+-----------+
3 rows in set (0.00 sec)


5.Find out the number of R rated movies rented by “SUSAN WILSON”.

mysql> select count(title) as Count_of_R from film F,inventory I,rental R,customer_list CL where F.film_id=I.film_id And I.inventory_id=R.inventory_id And  R.customer_id=CL.ID And CL.name like '%SUSAN WILSON%' And F.rating ='R';
+------------+
| Count_of_R |
+------------+
|          3 |
+------------+
1 row in set (0.01 sec)

